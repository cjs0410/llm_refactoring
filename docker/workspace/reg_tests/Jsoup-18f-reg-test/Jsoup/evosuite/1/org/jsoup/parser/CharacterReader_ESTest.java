/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 18 07:15:34 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.rewindToMark();
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.mark();
      assertEquals("org.jsoup.parser.CharacterReader", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("\r\n?");
      characterReader0.unconsume();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      String string0 = characterReader0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("st)+$%a7Ivw0yIMQ,F");
      characterReader0.consumeAsString();
      assertEquals("t)+$%a7Ivw0yIMQ,F", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("st)+$%a7Ivw0yIMQ,F");
      characterReader0.consumeTo('d');
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals("", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3&I;}E@");
      char char0 = characterReader0.current();
      assertEquals('3', char0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("I*.E~rais1");
      characterReader0.advance();
      characterReader0.consume();
      characterReader0.consumeTo('*');
      char char0 = characterReader0.current();
      assertEquals("", characterReader0.toString());
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("st)+$%a7Ivw0yIMQ,F");
      assertEquals("st)+$%a7Ivw0yIMQ,F", characterReader0.toString());
      
      characterReader0.consumeToEnd();
      char char0 = characterReader0.consume();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.consumeTo('o');
      assertEquals("org.jsoup.parser.CharacterReader", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("st)+$%a7Ivw0yIMQ,F");
      characterReader0.consumeTo("ce");
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("st)+$%a7Ivw0yIMQ,F");
      String string0 = characterReader0.consumeTo("st)+$%a7Ivw0yIMQ,F");
      assertEquals("st)+$%a7Ivw0yIMQ,F", characterReader0.toString());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("EEg]:Q*/0+73CS<W?");
      char[] charArray0 = new char[7];
      charArray0[2] = '';
      characterReader0.consumeToAny(charArray0);
      assertEquals("Eg]:Q*/0+73CS<W?", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("st)+$%a7Ivw0yIMQ,F");
      characterReader0.consumeTo('b');
      assertEquals("", characterReader0.toString());
      
      char[] charArray0 = new char[1];
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("st)+$%a7Ivw0yIMQ,F");
      char[] charArray0 = new char[0];
      characterReader0.consumeToAny(charArray0);
      characterReader0.consumeLetterSequence();
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("EEg]:Q*/0+73CS<W?");
      characterReader0.consumeLetterSequence();
      assertEquals("Eg]:Q*/0+73CS<W?", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("st)+$a7}vw0yIMQ%F");
      characterReader0.consumeLetterSequence();
      characterReader0.consumeHexSequence();
      assertEquals(")+$a7}vw0yIMQ%F", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("st)+$%a7Ivw0yIMQ,F");
      characterReader0.consumeTo('b');
      characterReader0.consumeHexSequence();
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("EEg]:Q*/0+73CS<W?");
      characterReader0.consumeHexSequence();
      assertEquals("Eg]:Q*/0+73CS<W?", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F3f8K6_rx#{?lSvT");
      characterReader0.consumeHexSequence();
      assertEquals("K6_rx#{?lSvT", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consumeDigitSequence();
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3E");
      characterReader0.consumeDigitSequence();
      assertEquals("E", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3&I;}E@");
      characterReader0.consumeDigitSequence();
      assertEquals("&I;}E@", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("st)+$%a7Ivw0yIMQ,F");
      assertEquals("st)+$%a7Ivw0yIMQ,F", characterReader0.toString());
      
      characterReader0.consumeTo('d');
      boolean boolean0 = characterReader0.matches('<');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("EEg]:Q*/0+73CS<W?");
      boolean boolean0 = characterReader0.matches('E');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("EEg]:Q*/0+73CS<W?");
      characterReader0.advance();
      boolean boolean0 = characterReader0.matches('E');
      assertEquals("Eg]:Q*/0+73CS<W?", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      char[] charArray0 = new char[4];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals("org.jsoup.parser.CharacterReader", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("st)+$%a7Ivw0yIMQ,F");
      char[] charArray0 = new char[0];
      characterReader0.consumeToAny(charArray0);
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals("", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      char[] charArray0 = new char[4];
      charArray0[1] = 'o';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("EEg]:Q*/0+73CS<W?");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("st)+$%a7Ivw0yIMQ,F");
      characterReader0.consumeTo('b');
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals("", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("st)+$a7}vw0yIMQ%F");
      characterReader0.consumeLetterSequence();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(")+$a7}vw0yIMQ%F", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("EEg]:Q*/0+73CS<W?");
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals("Eg]:Q*/0+73CS<W?", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3E");
      boolean boolean0 = characterReader0.matchesDigit();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("-Hyf~f&;5wX/;tg+\"0g");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
      assertEquals("-Hyf~f&;5wX/;tg+\"0g", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3E");
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals("E", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("yMCnL");
      boolean boolean0 = characterReader0.matchConsume("Q3h_(5^eP|@");
      assertEquals("yMCnL", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("st)+$%a7Ivw0yIMQ,F");
      boolean boolean0 = characterReader0.matchConsume("st)+$%a7Ivw0yIMQ,F");
      assertEquals("", characterReader0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("VoUXSa6u`");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("ce");
      assertFalse(boolean0);
      assertEquals("VoUXSa6u`", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("I*.E~rais1");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("");
      assertTrue(boolean0);
      assertEquals("I*.E~rais1", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ce");
      boolean boolean0 = characterReader0.containsIgnoreCase("");
      assertTrue(boolean0);
      assertEquals("ce", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("st)+$%a7Ivw0yIMQ,F");
      boolean boolean0 = characterReader0.containsIgnoreCase("st)+$%a7Ivw0yIMQ,F");
      assertFalse(boolean0);
      assertEquals("st)+$%a7Ivw0yIMQ,F", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3E");
      boolean boolean0 = characterReader0.containsIgnoreCase("3E");
      assertTrue(boolean0);
  }
}
