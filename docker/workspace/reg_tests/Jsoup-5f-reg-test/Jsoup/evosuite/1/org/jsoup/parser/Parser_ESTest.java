/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 16 02:33:28 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.parser.Parser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<?", "<?");
      assertFalse(document0.isBlock());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Document document0 = Parser.parse("<![CDATA[", "<![CDATA[");
      assertEquals("#root", document0.tagName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(")b<IvK$$h~a`6')<F@Uc", ")b<IvK$$h~a`6')<F@Uc");
      assertEquals("#root", document0.tagName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("</", "</");
      assertEquals("#document", document0.nodeName());
      assertEquals("</", document0.baseUri());
      assertFalse(document0.isBlock());
      assertEquals("#root", document0.tagName());
      assertEquals(0, (int)document0.siblingIndex());
      assertNotNull(document0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("<!--", "<!--");
      assertEquals(0, (int)document0.siblingIndex());
      assertFalse(document0.isBlock());
      assertEquals("#root", document0.tagName());
      assertEquals("<!--", document0.baseUri());
      assertEquals("#document", document0.nodeName());
      assertNotNull(document0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Document document0 = Parser.parse("<![CDATA", "<![CDATA");
      assertEquals("<![CDATA", document0.baseUri());
      assertEquals("#root", document0.tagName());
      assertEquals("#document", document0.nodeName());
      assertEquals(0, (int)document0.siblingIndex());
      assertFalse(document0.isBlock());
      assertNotNull(document0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Document document0 = Parser.parse("^V+[RT75~<i*Eo=/", "^V+[RT75~<i*Eo=/");
      assertEquals("#root", document0.tagName());
      assertEquals(0, (int)document0.siblingIndex());
      assertFalse(document0.isBlock());
      assertEquals("#document", document0.nodeName());
      assertEquals("^V+[RT75~<i*Eo=/", document0.baseUri());
      assertNotNull(document0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Document document0 = Parser.parse(")b<IvK$$h~a`6')<@Uc", ")b<IvK$$h~a`6')<@Uc");
      assertEquals(0, (int)document0.siblingIndex());
      assertEquals(")b<IvK$$h~a`6')<@Uc", document0.baseUri());
      assertEquals("#document", document0.nodeName());
      assertEquals("#root", document0.tagName());
      assertFalse(document0.isBlock());
      assertNotNull(document0);
  }
}
