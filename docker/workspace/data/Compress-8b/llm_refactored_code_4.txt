public static long parseOctal(final byte[] buffer, final int offset, final int length) {
    if (length < 2) {
        throw new IllegalArgumentException("Length " + length + " must be at least 2");
    }

    boolean allZeros = true;
    int start = offset;
    int end = offset + length;

    for (int i = start; i < end; i++) {
        if (buffer[i] != 0) {
            allZeros = false;
            break;
        }
    }

    if (allZeros) {
        return 0L;
    }

    while (start < end && buffer[start] == ' ') {
        start++;
    }

    if (buffer[end - 1] == 0 || buffer[end - 1] == ' ') {
        end--;
    } else {
        throw new IllegalArgumentException(exceptionMessage(buffer, offset, length, end - 1, buffer[end - 1]));
    }

    if (buffer[end - 1] == 0 || buffer[end - 1] == ' ') {
        end--;
    }

    long result = 0;
    for (; start < end; start++) {
        byte currentByte = buffer[start];
        if (currentByte < '0' || currentByte > '7') {
            throw new IllegalArgumentException(exceptionMessage(buffer, offset, length, start, currentByte));
        }
        result = (result << 3) + (currentByte - '0'); // convert from ASCII
    }

    return result;
}