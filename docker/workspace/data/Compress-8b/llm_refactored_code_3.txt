public static long parseOctal(final byte[] buffer, final int offset, final int length) {
    if (length < 2) {
        throw new IllegalArgumentException("Length " + length + " must be at least 2");
    }

    boolean allNUL = true;
    for (int i = offset; i < offset + length; i++) {
        if (buffer[i] != 0) {
            allNUL = false;
            break;
        }
    }
    if (allNUL) {
        return 0L;
    }

    int start = offset;
    int end = offset + length;

    while (start < end && buffer[start] == ' ') {
        start++;
    }

    byte trailer = buffer[end - 1];
    if (trailer != 0 && trailer != ' ') {
        throw new IllegalArgumentException(
            exceptionMessage(buffer, offset, length, end - 1, trailer));
    }
    end = (trailer == ' ' && start < end - 1) ? end - 1 : end;

    long result = 0;
    for (int i = start; i < end; i++) {
        final byte currentByte = buffer[i];
        if (currentByte < '0' || currentByte > '7') {
            throw new IllegalArgumentException(
                exceptionMessage(buffer, offset, length, i, currentByte));
        }
        result = (result << 3) + (currentByte - '0'); // convert from ASCII
    }

    return result;
}