public String chompBalanced(char open, char close) {
    boolean inQuote = false;

    int start = -1;
    int end = -1;
    int depth = 0;
    char last = 0;

    while (!isEmpty()) {
        Character c = consume();
        
        if (!inQuote && (c.equals('\'') || c.equals('"')) && c != open) {
            inQuote = true;
            continue;
        }

        if (inQuote) {
            if (c.equals(open)) {
                depth++;
                if (start == -1) {
                    start = pos;
                }
            } else if (c.equals(close)) {
                depth--;
            }
        }

        if (depth > 0 && last != 0) {
            end = pos; // don't include the outer match pair in the return
        }
        
        last = c;
    }

    return (end >= 0) ? queue.substring(start, end) : "";
}