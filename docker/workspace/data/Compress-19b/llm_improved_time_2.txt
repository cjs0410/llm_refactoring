public void reparseCentralDirectoryData(boolean hasUncompressedSize,
                                        boolean hasCompressedSize,
                                        boolean hasRelativeHeaderOffset,
                                        boolean hasDiskStart)
        throws ZipException {
    if (rawCentralDirectoryData != null
            && rawCentralDirectoryData.length < 16) {
        throw new ZipException("central directory zip64 extended"
                               + " information extra field's length"
                               + " doesn't match central directory"
                               + " data.  Expected length 16 but is "
                               + rawCentralDirectoryData.length);
    }
    int offset = 0;
    if (hasUncompressedSize) {
        size = new ZipEightByteInteger(rawCentralDirectoryData, offset);
        offset += DWORD;
    }
    if (hasCompressedSize) {
        compressedSize = new ZipEightByteInteger(rawCentralDirectoryData, offset);
        offset += DWORD;
    }
    if (hasRelativeHeaderOffset) {
        relativeHeaderOffset = new ZipEightByteInteger(rawCentralDirectoryData, offset);
        offset += DWORD;
    }
    if (hasDiskStart) {
        diskStart = new ZipLong(rawCentralDirectoryData, offset);
        offset += WORD;
    }
}