static String unescape(String string) {
    if (!string.contains("&"))
        return string;

    Matcher m = unescapePattern.matcher(string);
    StringBuilder accum = new StringBuilder(string.length());

    while (m.find()) {
        int charval = -1;
        String num = m.group(3);
        if (num != null) {
            try {
                int base = m.group(2) != null ? 16 : 10;
                charval = Integer.valueOf(num, base);
            } catch (NumberFormatException e) {
                // skip
            }
        } else {
            String name = m.group(1);
            if (full.containsKey(name))
                    charval = full.get(name);
        }

        if (charval != -1 || charval > 0xFFFF) { // out of range
            String c = Character.toString((char) charval);
            m.appendReplacement(accum, Matcher.quoteReplacement(c));
        } else {
            StringBuilder replacement = new StringBuilder();
            m.appendReplacement(replacement, m.group(0));
            m.appendTail(replacement);
            accum.append(Matcher.quoteReplacement(replacement.toString())); // replace with original string
        }
    }
    m.appendTail(accum);
    return accum.toString();
}