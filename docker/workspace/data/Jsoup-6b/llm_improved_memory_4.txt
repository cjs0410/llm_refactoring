static String unescape(String string) {
    if (!string.contains("&"))
        return string;

    Matcher m = unescapePattern.matcher(string);
    StringBuffer accum = new StringBuffer(string.length());
    boolean hasUnsupportedChar = false;
    StringBuffer c = new StringBuffer();

    while (m.find()) {
        int charval = -1;
        String num = m.group(3);

        if (num != null) {
            try {
                int base = m.group(2) != null ? 16 : 10;
                charval = Integer.valueOf(num, base);
            } catch (NumberFormatException e) {
                hasUnsupportedChar = true;
            }
        } else {
            String name = m.group(1);

            if (full.containsKey(name)) {
                charval = full.get(name);
            } else {
                hasUnsupportedChar = true;
            }
        }

        if (charval != -1 || charval > 0xFFFF) {
            c.append(Character.toString((char) charval));
        } else {
            c.append(m.group(0));
        }
    }

    if (hasUnsupportedChar) {
        m.appendReplacement(accum, m.group(0));
    } else {
        m.appendReplacement(accum, Matcher.quoteReplacement(c.toString()));
    }

    m.appendTail(accum);
    return accum.toString();
}