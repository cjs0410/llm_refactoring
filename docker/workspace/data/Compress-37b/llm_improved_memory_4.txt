Map<String, String> parsePaxHeaders(final InputStream i) throws IOException {
    final Map<String, String> headers = new HashMap<>(globalPaxHeaders);

    int ch;
    int len = 0;
    while ((ch = i.read()) != -1) {
        if (ch == '\n') {
            break;
        } else if (ch == ' ') {
            final ByteArrayOutputStream coll = new ByteArrayOutputStream();
            while ((ch = i.read()) != -1) {
                if (ch == '=') {
                    final String keyword = coll.toString(CharsetNames.UTF_8);
                    final int restLen = len - coll.size() - 1;
                    if (restLen == 1) {
                        headers.remove(keyword);
                    } else {
                        final byte[] rest = new byte[restLen];
                        final int got = IOUtils.readFully(i, rest);
                        if (got != restLen) {
                            throw new IOException("Failed to read Paxheader. Expected " + restLen + " bytes, read " + got);
                        }
                        final String value = new String(rest, 0, restLen - 1, CharsetNames.UTF_8);
                        headers.put(keyword, value);
                    }
                    break;
                }
                coll.write((byte) ch);
            }
            break;
        }
        len *= 10;
        len += ch - '0';
    }
    return headers;
}