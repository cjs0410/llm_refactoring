public final void translate(CharSequence input, Writer out) throws IOException {
    if (out == null) {
        throw new IllegalArgumentException("The Writer must not be null");
    }
    if (input == null) {
        return;
    }
    int pos = 0;
    int len = input.length();
    while (pos < len) {
        int consumed = translate(input, pos, out);
        if (consumed == 0) {
            char[] c = Character.toChars(Character.codePointAt(input, pos));
            out.write(c);
            pos += c.length;
            continue;
        }

        int codePointCount = Character.codePointCount(input, pos, pos + consumed);
        for (int codePointIndex = 0; codePointIndex < codePointCount; codePointIndex++) {
            int charIndex = Character.offsetByCodePoints(input, pos, codePointIndex);
            int codePoint = Character.codePointAt(input, charIndex);
            pos += Character.charCount(codePoint);
        }
    }
}