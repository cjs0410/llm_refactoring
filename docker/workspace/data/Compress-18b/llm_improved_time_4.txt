void writePaxHeaders(String entryName,
                     Map<String, String> headers) throws IOException {
    String name = "./PaxHeaders.X/" + stripTo7Bits(entryName);
    name = removeTrailingSlashes(name);
    if (name.length() >= TarConstants.NAMELEN) {
        name = name.substring(0, TarConstants.NAMELEN - 1);
    }
    TarArchiveEntry pex = new TarArchiveEntry(name, TarConstants.LF_PAX_EXTENDED_HEADER_LC);

    StringBuilder sb = new StringBuilder();
    for (Map.Entry<String, String> header : headers.entrySet()) {
        String key = header.getKey();
        String value = header.getValue();
        int len = key.length() + value.length() + 3; // blank, equals, and newline
        String line = len + " " + key + "=" + value + "\n";
        byte[] lineBytes = line.getBytes(StandardCharsets.UTF_8);
        while (lineBytes.length != len) {
            len = lineBytes.length;
            line = len + " " + key + "=" + value + "\n";
            lineBytes = line.getBytes(StandardCharsets.UTF_8);
        }
        sb.append(line);
    }
    byte[] data = sb.toString().getBytes(StandardCharsets.UTF_8);
    pex.setSize(data.length);
    putArchiveEntry(pex);
    write(data);
    closeArchiveEntry();
}

private String removeTrailingSlashes(String name) {
    int endIndex = name.length() - 1;
    while (endIndex >= 0 && name.charAt(endIndex) == '/') {
        endIndex--;
    }
    return name.substring(0, endIndex + 1);
}