public static long parseOctal(final byte[] buffer, final int offset, final int length) {
    long result = 0;
    int end = offset + length;
    int start = offset;

    if (length < 2) {
        throw new IllegalArgumentException("Length " + length + " must be at least 2");
    }

    if (buffer[start] == 0) {
        return 0L;
    }

    // Skip leading spaces
    while (start < end && buffer[start] == ' ') {
        start++;
    }

    // Trim all trailing NULs and spaces
    while (start < end && (buffer[end - 1] == 0 || buffer[end - 1] == ' ')) {
        end--;
    }

    for (; start < end && (buffer[start] >= '0' && buffer[start] <= '7'); start++) {
        result = (result << 3) + (buffer[start] - '0'); // convert from ASCII
    }

    return result;
}